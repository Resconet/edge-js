name: Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Node.js version to build'
        required: true
        default: '20'
        type: choice
        options:
        - 18
        - 20
        - 22
        - 24

  workflow_call:
    inputs:
      version:
        description: 'Node.js major version'
        required: true
        type: string
      build-all:
        description: 'Building for all versions?'
        required: true
        default: false
        type: boolean

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1 
  DOTNET_NOLOGO: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  test-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.test-matrix.outputs.matrix }}
    name: test-os-matrix
    steps:
      - name: Test versions
        shell: bash
        id: test-matrix
        run: |
          echo "::notice::Starting build for Node.js ${{ inputs.version }}"
          echo "matrix={'include':[{\"name\":\"test-win-x64\",\"os\":\"windows-2025\",\"platform\":\"win\"},{\"name\":\"test-win-arm64\",\"os\":\"windows-11-arm\",\"platform\":\"win\"},{\"name\":\"test-darwin-x64\",\"os\":\"macos-13\",\"platform\":\"darwin\"},{\"name\":\"test-darwin-arm64\",\"os\":\"macos-15\",\"platform\":\"darwin\"}]}" >> $GITHUB_OUTPUT

  node-version:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node-test-version.outputs.node-version }}
    name: node-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get Node.js version
        id: node-test-version
        shell: bash
        run: |
          node tools/getVersion.js ${{ inputs.version }}
          version=$(cat node.txt)
          echo "node-version=$version" >> $GITHUB_OUTPUT
          echo "::notice::Node.js version is $version"

  build-win-x86:
    needs: node-version
    uses: ./.github/workflows/build-edge.yml
    with:
      version: ${{ inputs.version }}
      os: windows-2025
      platform: win
      arch: ia32
      node: ${{ needs.node-version.outputs.node-version }}

  build-win-x64:
    needs: node-version
    uses: ./.github/workflows/build-edge.yml
    with:
      version: ${{ inputs.version }}
      os: windows-2025
      platform: win
      arch: x64
      node: ${{ needs.node-version.outputs.node-version }}

  build-win-arm64:
    needs: node-version
    uses: ./.github/workflows/build-edge.yml
    with:
      version: ${{ inputs.version }}
      os: windows-2025
      platform: win
      arch: arm64
      node: ${{ needs.node-version.outputs.node-version }}

  build-darwin-x64:
    needs: node-version
    uses: ./.github/workflows/build-edge.yml
    with:
      version: ${{ inputs.version }}
      os: macos-13
      platform: darwin
      arch: x64
      node: ${{ needs.node-version.outputs.node-version }}

  build-darwin-arm64:
    needs: node-version
    uses: ./.github/workflows/build-edge.yml
    with:
      version: ${{ inputs.version }}
      os: macos-15
      platform: darwin
      arch: arm64
      node: ${{ needs.node-version.outputs.node-version }}
 
  test:
    uses: ./.github/workflows/build-test.yml
    with:
      version: ${{ inputs.version }}
      os: ${{ matrix.os }}
      platform: ${{ matrix.platform }}
      name: ${{ matrix.name }}
    needs: [test-matrix, build-win-x86, build-win-x64, build-win-arm64, build-darwin-x64, build-darwin-arm64]
    strategy:
      matrix: ${{ fromJSON(needs.test-matrix.outputs.matrix) }}
      fail-fast: false
    name: ${{ matrix.name }}

  upload-artifacts:
    if: ${{ inputs.build-all == false && success() }}
    runs-on: ubuntu-latest
    needs: test

    name: upload-artifacts
    steps:

      - name: Download artifacts
        uses: actions/download-artifact@v4
        
        with:
          path: release
          pattern: '*-edge-js*'

      - name: Upload artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: edge-js-${{ inputs.version }}
          pattern: '*edge-js*'
          delete-merged: true
