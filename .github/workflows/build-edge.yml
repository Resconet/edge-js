name: Pipeline Segment - build edge-js

on:
  workflow_call:
    inputs:
      version:
        description: 'Node.js major version'
        required: true
        type: string
      node:
        description: 'Node.js full version'
        required: true
        type: string
      os:
        description: 'OS'
        required: true
        type: string
      environment:
        description: 'environment'
        required: false
        default: 'build edge-js'
        type: string
      arch:
        description: 'arch'
        required: false
        default: ''
        type: string

jobs:
  build-edge:
    if: ${{ !(inputs.os == 'windows-2025' && inputs.arch == 'ia32' && inputs.node > 23) && !(inputs.os == 'windows-11-arm' && inputs.arch == 'arm64' && inputs.node <= 18) }}
    runs-on: ${{ inputs.os }}
    environment: ${{ inputs.environment }}
    name: build
    timeout-minutes: 20
    steps:
      
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup env
        uses: ./.github/actions/setup-env
        with:
          node: '${{ inputs.version }}'
          os: ${{ inputs.os }}

      - name: install node-gyp
        shell: bash
        run: npm i -g node-gyp

      - name: Create release folder
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            try {
              const fs = require('fs')
              fs.mkdirSync(`release/${process.platform}/${{ inputs.arch }}/${{ inputs.version }}`, { recursive: true });
            } catch(err) {
              core.error("Error creating release directory")
              core.setFailed(err)
            }

      - name: Create node.version file
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            try {
              const fs = require('fs')
              fs.writeFileSync(`release/${process.platform}/${{ inputs.arch }}/${{ inputs.version }}/node.version`, '${{ inputs.node }}');
            } catch(err) {
              core.error("Error writing node.version file")
              core.setFailed(err)
            }

      - name: Build ${{ inputs.arch }}
        uses: ./.github/actions/build
        with:
          version: ${{ inputs.version }}
          node: ${{ inputs.node }}
          arch: ${{ inputs.arch }}
    
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: runner.os == 'Windows' && success()
        with:
          name: win32-edge-js-${{ inputs.arch }}-${{ inputs.version }}
          path: |
            release

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: runner.os == 'macOS' && success()
        with:
          name: darwin-edge-js-${{ inputs.arch }}-${{ inputs.version }}
          path: |
            release
