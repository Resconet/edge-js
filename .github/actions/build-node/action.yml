name: 'Node.js build'
description: 'Node.js build'
inputs:
  node:
    description: 'Node version'
    required: true
  os:
    description: 'runs-on'
    required: false
    default: 'windows-2022'
   
runs:
  using: "composite"
  steps:

      - name: Setup env
        uses: ./.github/actions/setup-env
        with:
          node: 20
          os: windows-2022

      - name: Get latest Node.js version for v${{ inputs.node }}
        id: node-test-version
        shell: bash
        run: |
          node tools/getVersionAction.js ${{ inputs.node }}
          echo "node-version=$(cat node.txt)" >> $GITHUB_OUTPUT
   
      - name: install node-gyp
        shell: bash
        run: npm i -g node-gyp

      - name: Create release folder
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            try {
              const fs = require('fs')
              if(${{ inputs.node }} <23){
                fs.mkdirSync('release/ia32/${{ inputs.node }}', { recursive: true });
              }
              fs.mkdirSync('release/x64/${{ inputs.node }}', { recursive: true });
              if(${{ inputs.node }} >=20){
                fs.mkdirSync('release/arm64/${{ inputs.node }}', { recursive: true });
              }
            } catch(err) {
              core.error("Error creating release directory")
              core.setFailed(err)
            }

      - name: Create node.version file
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            try {
              const fs = require('fs')
              if(${{ inputs.node }} <23){
                fs.writeFileSync('release/ia32/${{ inputs.node }}/node.version', '${{ steps.node-test-version.outputs.node-version }}');
              }
              fs.writeFileSync('release/x64/${{ inputs.node }}/node.version', '${{ steps.node-test-version.outputs.node-version }}');
              if(${{ inputs.node }} >=20){
                fs.writeFileSync('release/arm64/${{ inputs.node }}/node.version', '${{ steps.node-test-version.outputs.node-version }}');
              }
            } catch(err) {
              core.error("Error writing node.version file")
              core.setFailed(err)
            }

      - name: Cache node-gyp
        uses: actions/cache@v4
        env:
          cache-name: cache-node-gyp
        with:
          path: ~\AppData\Local\node-gyp\Cache
          key: ${{ steps.node-test-version.outputs.node-version }}

      - name: Build ia32
        if: ${{ inputs.node <23 }}
        uses: ./.github/actions/build
        with:
          node: ${{ steps.node-test-version.outputs.node-version }}
          node-major: ${{ inputs.node }}
          arch: 'ia32'

      - name: Build x64
        uses: ./.github/actions/build
        with:
          node: ${{ steps.node-test-version.outputs.node-version }}
          node-major: ${{ inputs.node }}
          arch: 'x64'

      - name: Build arm64
        if: ${{ inputs.node >=20 }}
        uses: ./.github/actions/build
        with:
          node: ${{ steps.node-test-version.outputs.node-version }}
          node-major: ${{ inputs.node }}
          arch: 'arm64'
    
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: edge-js-${{ inputs.node }}
          path: |
            release
