name: 'Setup environment'
description: 'Sets up environment'
inputs:
  node:
    description: 'Node.js version'
    required: false
    default: '22'
  os:
    description: 'runs-on'
    required: true
  arch:
    description: 'Architecture'
    required: false
    default: ''
  is-build:
    description: 'is running edge build'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:

    - name: Setup NodeJS
      if: ${{ inputs.is-build != 'true' }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node }}
        architecture: ${{ inputs.arch }}
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Cache node-gyp Linux
      if: runner.os == 'Linux'
      uses: actions/cache@v4
      env:
        cache-name: cache-node-gyp
      with:
        path: ~/.cache/node-gyp
        key: 'node-gyp-${{ inputs.os }}-${{ runner.arch }}-${{ inputs.node}}'

    - name: Cache node modules
      id: cache-nodemodules
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: node_modules
        key: "node-modules-${{ inputs.os }}-${{ inputs.node }}-${{ hashFiles('package-lock.json') }}"

    - name: Cache Homebrew
      if: runner.os == 'macOS'
      uses: actions/cache@v4
      with:
        path: |
          $(brew --prefix)/Cellar
          $(brew --prefix)/Cellar/mono/
          $(brew --prefix)/Cellar/pkgconf/
          $(brew --prefix)/Cellar/python-setuptools/
        # key: brew-${{ inputs.os }}-${{ hashFiles('./Brewfile') }}
        key: brew-${{ inputs.os }}

    - name: Cache NuGet
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: nuget-${{ inputs.os }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ inputs.os }}-nuget-

    - name: Setup dotnet
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '8.0.x' # SDK Version to use; x will use the latest version of the 8.0 channel

    - if: runner.os == 'macOS' && inputs.node == 16
      shell: bash
      name: Add missing packages for macOS NodeJs 16 
      run: |
        brew install python-setuptools --overwrite # required macos-15
        pip install --upgrade --force-reinstall setuptools # required macos-13

    - name: Setup Mono
      if: runner.os == 'macOS'
      shell: bash
      run: |
        current_date_time="`%H%M%S`";
        echo $current_date_time;
        echo "----------------------------------------------"
        brew install mono --overwrite
        brew reinstall pkg-config
        brew bundle dump --file ./Brewfile --force
        echo "$(brew --prefix)"
        # echo "----------------------------------------------"
        # ls $(brew --prefix)
        # echo "----------------------------------------------"
        # ls $(brew --prefix)/Cellar
        # # echo "$(cat ./Brewfile)"
        # echo "----------------------------------------------"
        current_date_time="`%H%M%S`";
        echo $current_date_time;


    # - name: Setup Mono
    #   if: runner.os == 'Linux'
    #   shell: bash
    #   run: |
    #     sudo apt -q install mono-complete pkg-config libglib2.0-dev

    - uses: actions/checkout@v4
    - uses: awalsh128/cache-apt-pkgs-action@latest
      name: Setup Mono
      if: runner.os == 'Linux'
      with:
        packages: mono-complete pkg-config libglib2.0-dev
        version: 1.0

    # - name: Cache Homebrew
    #   if: runner.os == 'macOS'
    #   uses: actions/cache@v4
    #   with:
    #     path: |
    #       ~/opt/homebrew/Cellar/mono
    #       ~/opt/homebrew/Cellar/pkgconf
    #     key: brew-${{ inputs.os }}

    - name: Versions
      shell: bash
      run: |
        node -v && npm -v && dotnet --version && node -p process.platform && node -p process.arch

    - name: npm install
      shell: bash
      run: npm i --no-audit
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1